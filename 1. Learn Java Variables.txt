* 1. Learn Java: Variables
--------------------------
* Introduction
--------------
	We store information in variables, named locations in memory.

	Naming a piece of information allows us to use that name later, accessing the information we stored.

	Variables also give context and meaning to the data we’re storing. The value 42 could be someone’s age, a weight in pounds, or the number of orders placed. With a name, we 
	know the value 42 is age, weightInPounds, or numOrdersPlaced.

	In Java, we specify the type of information we’re storing. Primitive data types are types of data built-in to the Java system. The three main primitive types we’ll cover 
	are int, double, and boolean; this lesson will introduce these built-in types and more.

	We must declare a variable to reference it within our program. Declaring a variable requires that we specify the type and name:

		// datatype variableName
		int age;
		double salaryRequirement;
		boolean isEmployed;

	The names of the variables above are age, salaryRequirement, and isEmployed.

	These variables don’t have any associated value. To assign a value to a variable, we use the assignment operator =:

		age = 85;

	Now, age has a value of 85. When code is used to represent a fixed value, like 85, it is referred to as a literal.

	It’s also common to declare a variable and assign it a value in one line!

	For example, to assign 2011 to a variable named yearCodecademyWasFounded of type int, we write:

		int yearCodecademyWasFounded = 2011;

Creator.java
------------
public class Creator {
	public static void main(String[] args) {
    String name = "James Gosling";
    int yearCreated = 1995;
    System.out.println(name);
    System.out.println(yearCreated);
	}
}

==================================================================================================================================================================

* ints
------
	The first type of data we will store is the whole number. Whole numbers are very common in programming. You often see them used to store ages, or maximum sizes, or the number of 
	times some code has been run, among many other uses.

	In Java, whole numbers are stored in the int primitive data type.

	ints hold positive numbers, negative numbers, and zero. They do not store fractions or numbers with decimals in them.

	The int data type allows values between -2,147,483,648 and 2,147,483,647, inclusive.

	To declare a variable of type int, we use the int keyword before the variable name:

		// int variable declaration
		int yearJavaWasCreated;
		// assignment
		yearJavaWasCreated = 1996;
		// declaration and assignment
		int numberOfPrimitiveTypes = 8;

CountComment.java
-----------------
//This is the class declaration
public class CountComment {
  //This is the main method that runs when you compile
	public static void main(String[] args) {
    //This is where you will define your variable
    int numComments = 6;
    //This is where you will print your variable
    System.out.println(numComments);
	}
  
  //This is the end of the class
}

//This is outside the class

==================================================================================================================================================================

* doubles
---------
	Whole numbers don’t accomplish what we need for every program. What if we wanted to store the price of something? We need a decimal point. What if we wanted to store the world’s 
	population? That number would be larger than the int type can hold.

	The double primitive data type can help. double can hold decimals as well as very large and very small numbers. The maximum value is 1.797,693,134,862,315,7 E+308, which is 
	approximately 17 followed by 307 zeros. The minimum value is 4.9 E-324, which is 324 decimal places!

	To declare a variable of type double, we use the double keyword in the declaration:

		// doubles can have decimal places:
		double price = 8.99;
		// doubles can have values bigger than what an int could hold:
		double gdp = 12237700000;

MarketShare.java
----------------
public class MarketShare {
	public static void main(String[] args) {
    double androidShare = 81.7;
    System.out.println(androidShare);
	}
}

==================================================================================================================================================================

* booleans
----------
	Often our programs face questions that can only be answered with yes or no.

	Is the oven on? Is the light green? Did I eat breakfast?

	These questions are answered with a boolean, a type that references one of two values: true or false.

	We declare boolean variables by using the keyword boolean before the variable name.

		boolean javaIsACompiledLanguage = true;
		boolean javaIsACupOfCoffee = false;

==================================================================================================================================================================





























